<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.migu.income.dao.TMiguIncomeBillingMapper">
    <resultMap id="BaseResultMap" type="cn.migu.income.pojo.TMiguIncomeBilling">
        <result column="BILLING_KEY" property="billingKey" jdbcType="VARCHAR"/>
        <result column="CYCLE" property="cycle" jdbcType="VARCHAR"/>
        <result column="PROJECT_ID" property="projectId" jdbcType="VARCHAR"/>
        <result column="PROJECT_NAME" property="projectName" jdbcType="VARCHAR"/>
        <result column="BILLING_TYPE" property="billType" jdbcType="VARCHAR"/>
        <result column="INVOICE_CODE" property="invoiceCode" jdbcType="VARCHAR"/>
        <result column="INVOICE_NUMBER" property="invoiceNumber" jdbcType="VARCHAR"/>
        <result column="BILLING_TIME" property="billingTime" jdbcType="VARCHAR"/>
        <result column="BILLING_STATUS" property="billingStatus" jdbcType="VARCHAR"/>
        <result column="TOTAL" property="total" jdbcType="DECIMAL"/>
		<result column="BILLING_TOTAL" property="billingTotal" jdbcType="DECIMAL"/>
		
		<result column="CLASS_NAME" property="className" jdbcType="VARCHAR"/>
		<result column="SECTION_NAME" property="sectionName" jdbcType="VARCHAR"/>
		<result column="DEPT_NAME" property="deptName" jdbcType="VARCHAR"/>
		<result column="USER_NAME" property="userName" jdbcType="VARCHAR"/>
		
		<result column="BZ_CYCLE" property="bzCycle" jdbcType="VARCHAR"/>

    </resultMap>

    <sql id="Base_Column_List">
        BILLING_KEY, CYCLE, PROJECT_ID, PROJECT_NAME,
        BILLING_TYPE,INVOICE_CODE,INVOICE_NUMBER,TOTAL,BILLING_STATUS,BILLING_TIME
    </sql>
	<!-- 开票管理 查询条数 -->
    <select id="getIncomeBillingCount" resultType="java.lang.Integer" parameterType="java.util.Map">
         SELECT COUNT(1) FROM (SELECT M.*,ROWNUM R FROM(SELECT BILLING_KEY, CYCLE, PROJECT_ID, PROJECT_NAME, BILLING_TYPE,
       	BILLING_STATUS,CLASS_NAME,SECTION_NAME,DEPT_NAME,USER_NAME,BZ_CYCLE, TOTAL FROM (
		SELECT BILLING_KEY, CYCLE, PROJECT_ID, PROJECT_NAME, BILLING_TYPE,BILLING_STATUS,CLASS_NAME,
		SECTION_NAME,DEPT_NAME,USER_NAME, SUM(TOTAL) TOTAL ,BZ_CYCLE FROM (SELECT T1.BILLING_KEY, T1.CYCLE,
		T1.PROJECT_ID,T1.PROJECT_NAME,T1.BILLING_TYPE, T2.INVOICE_NUMBER INVOICE_NUMBER,T1.BZ_CYCLE,
		T2.INVOICE_CODE INVOICE_CODE,T2.BILLING_DATE BILLING_TIME, T2.TOTAL TOTAL,
		T1.INVOICE_STATUS BILLING_STATUS, T1.USER_ID,C.INCOME_NAME CLASS_NAME,Z.INCOME_NAME SECTION_NAME,
		D.DEPT_NAME,U.USER_NAME  FROM INCOME.T_MIGU_INCOME_BILLING T1 LEFT JOIN INCOME.T_MIGU_INCOME_BILL T2
		ON T1.BILLING_KEY = T2.BILLING_KEY LEFT JOIN T_MIGU_PROJECT_BASE P ON T1.PROJECT_ID=P.PROJECT_ID
		LEFT JOIN T_MIGU_DEPARTMENTS D ON P.PROJECT_DEPT_ID = D.DEPT_CODE LEFT JOIN T_MIGU_USERS U ON 
		P.PROJECT_USER_ID = U.USER_ID LEFT JOIN  T_MIGU_INCOME_CATEGORIES C ON C.INCOME_ID = P.INCOME_CLASS_ID
		LEFT JOIN T_MIGU_INCOME_CATEGORIES Z ON (Z.INCOME_ID = P.INCOME_SECTION_ID AND Z.INCOME_PARENT_ID = 
		P.INCOME_CLASS_ID) WHERE 1=1 
		  <if test="q_month_begin != null and q_month_end == null">
                AND T1.CYCLE <![CDATA[   >=  ]]> #{q_month_begin,jdbcType=VARCHAR}
            </if>
            <if test="q_month_begin == null and q_month_end != null">
              AND  T1.CYCLE <![CDATA[   <=  ]]> #{q_month_end,jdbcType=VARCHAR}
            </if>
             <if test="q_month_begin != null and q_month_end != null">
              AND  T1.CYCLE <![CDATA[   <=  ]]> #{q_month_end,jdbcType=VARCHAR}
                AND T1.CYCLE <![CDATA[   >=  ]]> #{q_month_begin,jdbcType=VARCHAR}
            </if>
            <if test="q_projectId != null and q_projectId != '' ">
                AND T1.PROJECT_ID = #{q_projectId,jdbcType=VARCHAR}
            </if>
            <if test="q_projectName != null and q_projectName != '' ">
                AND T1.PROJECT_NAME like concat(concat('%',#{q_projectName,jdbcType=VARCHAR}),'%')
            </if>
            <if test="q_billState != null and q_billState != '' ">
                AND T1.INVOICE_STATUS = #{q_billState,jdbcType=VARCHAR}
            </if>
            <if test="q_userId != null  ">
                AND T1.USER_ID= #{q_userId,jdbcType=VARCHAR}
            </if>   
		     <if test="q_incomeClassId != null  ">
                 AND P.INCOME_CLASS_ID = #{q_incomeClassId,jdbcType=VARCHAR}
            </if>  
            <if test="q_incomeSectionId != null ">
                   AND P.INCOME_SECTION_ID = #{q_incomeSectionId,jdbcType=VARCHAR}
            </if>  
            <if test="q_dept != null  ">
                AND P.PROJECT_DEPT_ID = #{q_dept,jdbcType=VARCHAR}
            </if>  
            <if test="q_userName != null  ">
                AND U.USER_NAME like concat(concat('%', #{q_userName,jdbcType=VARCHAR}),'%')
            </if>  
		      <if test="q_bill_num != null  ">
                 AND T1.BILLING_KEY = #{q_bill_num,jdbcType=VARCHAR}
            </if>  
             <if test="q_month_bill != null  ">
                 AND T1.BZ_CYCLE = #{q_month_bill,jdbcType=VARCHAR}
            </if>  
		) 
		
		GROUP BY  BILLING_KEY, CYCLE, PROJECT_ID, PROJECT_NAME,BZ_CYCLE,
		BILLING_TYPE,BILLING_STATUS, CLASS_NAME,SECTION_NAME,DEPT_NAME,USER_NAME)
		WHERE 1=1
		  <if test="q_bill_total != null  ">
                 AND TOTAL = #{q_bill_total,jdbcType=VARCHAR}
          </if> 
		) M 
		)
    </select>
	<!-- 开票管理查询 -->
    <select id="getIncomeBillingList" resultMap="BaseResultMap" parameterType="java.util.Map">
       SELECT * FROM (SELECT M.*,ROWNUM R FROM( SELECT BILLING_KEY, CYCLE, PROJECT_ID, PROJECT_NAME, BILLING_TYPE,
       	BILLING_STATUS,CLASS_NAME,SECTION_NAME,DEPT_NAME,USER_NAME,BZ_CYCLE,  TOTAL FROM (
		SELECT BILLING_KEY, CYCLE, PROJECT_ID, PROJECT_NAME, BILLING_TYPE,BILLING_STATUS,CLASS_NAME,BZ_CYCLE,
		SECTION_NAME,DEPT_NAME,USER_NAME, SUM(TOTAL) TOTAL FROM (SELECT T1.BILLING_KEY, T1.CYCLE,
		T1.PROJECT_ID,T1.PROJECT_NAME,T1.BILLING_TYPE, T2.INVOICE_NUMBER INVOICE_NUMBER,
		T2.INVOICE_CODE INVOICE_CODE,T2.BILLING_DATE BILLING_TIME, T2.TOTAL TOTAL,T1.BZ_CYCLE,
		T1.INVOICE_STATUS BILLING_STATUS, T1.USER_ID,C.INCOME_NAME CLASS_NAME,Z.INCOME_NAME SECTION_NAME,
		D.DEPT_NAME,U.USER_NAME  FROM INCOME.T_MIGU_INCOME_BILLING T1 LEFT JOIN INCOME.T_MIGU_INCOME_BILL T2
		ON T1.BILLING_KEY = T2.BILLING_KEY LEFT JOIN T_MIGU_PROJECT_BASE P ON T1.PROJECT_ID=P.PROJECT_ID
		LEFT JOIN T_MIGU_DEPARTMENTS D ON P.PROJECT_DEPT_ID = D.DEPT_CODE LEFT JOIN T_MIGU_USERS U ON 
		P.PROJECT_USER_ID = U.USER_ID LEFT JOIN  T_MIGU_INCOME_CATEGORIES C ON C.INCOME_ID = P.INCOME_CLASS_ID
		LEFT JOIN T_MIGU_INCOME_CATEGORIES Z ON (Z.INCOME_ID = P.INCOME_SECTION_ID AND Z.INCOME_PARENT_ID = 
		P.INCOME_CLASS_ID) WHERE 1=1 
		  <if test="q_month_begin != null and q_month_end == null">
                AND T1.CYCLE <![CDATA[   >=  ]]> #{q_month_begin,jdbcType=VARCHAR}
            </if>
            <if test="q_month_begin == null and q_month_end != null">
              AND  T1.CYCLE <![CDATA[   <=  ]]> #{q_month_end,jdbcType=VARCHAR}
            </if>
             <if test="q_month_begin != null and q_month_end != null">
              AND  T1.CYCLE <![CDATA[   <=  ]]> #{q_month_end,jdbcType=VARCHAR}
                AND T1.CYCLE <![CDATA[   >=  ]]> #{q_month_begin,jdbcType=VARCHAR}
            </if>
            <if test="q_projectId != null and q_projectId != '' ">
                AND T1.PROJECT_ID = #{q_projectId,jdbcType=VARCHAR}
            </if>
            <if test="q_projectName != null and q_projectName != '' ">
                AND T1.PROJECT_NAME like concat(concat('%',#{q_projectName,jdbcType=VARCHAR}),'%')
            </if>
            <if test="q_billState != null and q_billState != '' ">
                AND T1.INVOICE_STATUS = #{q_billState,jdbcType=VARCHAR}
            </if>
            <if test="q_userId != null and q_userId != '' ">
                AND T1.USER_ID= #{q_userId,jdbcType=VARCHAR}
            </if>   
		     
		     <if test="q_incomeClassId != null  ">
                 AND P.INCOME_CLASS_ID = #{q_incomeClassId,jdbcType=VARCHAR}
            </if>  
            <if test="q_incomeSectionId != null ">
                   AND P.INCOME_SECTION_ID = #{q_incomeSectionId,jdbcType=VARCHAR}
            </if>  
            <if test="q_dept != null  ">
                AND P.PROJECT_DEPT_ID = #{q_dept,jdbcType=VARCHAR}
            </if>  
            <if test="q_userName != null  ">
                AND U.USER_NAME like concat(concat('%', #{q_userName,jdbcType=VARCHAR}),'%')
            </if>  
		      <if test="q_bill_num != null  ">
                 AND T1.BILLING_KEY = #{q_bill_num,jdbcType=VARCHAR}
            </if>  
            <if test="q_month_bill != null  ">
                 AND T1.BZ_CYCLE = #{q_month_bill,jdbcType=VARCHAR}
            </if>  
		) 
		
		GROUP BY  BILLING_KEY, CYCLE, PROJECT_ID, PROJECT_NAME,BZ_CYCLE,
		BILLING_TYPE,BILLING_STATUS, CLASS_NAME,SECTION_NAME,DEPT_NAME,USER_NAME)
		WHERE 1=1
		  <if test="q_bill_total != null  ">
                 AND TOTAL = #{q_bill_total,jdbcType=VARCHAR}
          </if> 
		) M 
		)WHERE <![CDATA[  R > (#{page}-1) * #{rows} AND R<= (#{page}) * #{rows}]]>
    </select>

    <insert id="insertBilling" parameterType="cn.migu.income.pojo.TMiguIncomeBilling">
        INSERT INTO income.T_MIGU_INCOME_BILLING
        (BILLING_KEY,
        CYCLE,
        PROJECT_ID,
        PROJECT_NAME,
        BILLING_TYPE,
        USER_ID,
        BZ_CYCLE)
        VALUES (
        #{billingKey},
        #{cycle},
        #{projectId},
        #{projectName},
        #{billType},
        #{userId},
        #{bzCycle}
        )
    </insert>
    
    <update id="updateInvoiceStatus" parameterType="cn.migu.income.pojo.TMiguIncomeBilling">
    
    	update  T_MIGU_INCOME_BILLING set invoice_status=#{billingStatus}
    	
    	where BILLING_KEY=#{billingKey}
    </update>
    
    <select id="selectUnBillSuccess" resultMap="BaseResultMap">
		select *from T_MIGU_INCOME_BILLING where invoice_status is  null or invoice_status <![CDATA[<>'00']]>
    </select>
    
    <select id="queryAllBill" resultMap="BaseResultMap" parameterType="java.util.Map">
select a.* from (
SELECT BILLING_KEY,
       CYCLE,
       PROJECT_ID,
       PROJECT_NAME,
       CLASS_NAME,
       SECTION_NAME,
       BILLING_TYPE,
       INVOICE_CODE,
       INVOICE_NUMBER,
       TOTAL,
       BILLING_STATUS,
       BILLING_TIME,
       DEPT_NAME,
       USER_NAME,
       BZ_CYCLE,
       (SELECT SUM(D.TOTAL)
          FROM INCOME.T_MIGU_INCOME_BILL D
         WHERE D.BILLING_KEY = C.BILLING_KEY) BILLING_TOTAL
  FROM (SELECT T1.BILLING_KEY,
               T1.CYCLE,
               T1.PROJECT_ID,
               T1.PROJECT_NAME,
               T1.BILLING_TYPE,
               T2.INVOICE_NUMBER INVOICE_NUMBER,
               T2.INVOICE_CODE   INVOICE_CODE,
               T2.BILLING_DATE   BILLING_TIME,
               T2.TOTAL          TOTAL,
               T1.INVOICE_STATUS BILLING_STATUS,
               T1.USER_ID,
               T1.BZ_CYCLE,
               C.INCOME_NAME     CLASS_NAME,
               Z.INCOME_NAME     SECTION_NAME,
               D.DEPT_NAME,
               U.USER_NAME
          FROM INCOME.T_MIGU_INCOME_BILLING T1
          LEFT JOIN INCOME.T_MIGU_INCOME_BILL T2
            ON T1.BILLING_KEY = T2.BILLING_KEY
          LEFT JOIN T_MIGU_PROJECT_BASE P
            ON T1.PROJECT_ID = P.PROJECT_ID
          LEFT JOIN T_MIGU_DEPARTMENTS D
            ON P.PROJECT_DEPT_ID = D.DEPT_CODE
          LEFT JOIN T_MIGU_USERS U
            ON P.PROJECT_USER_ID = U.USER_ID
          LEFT JOIN T_MIGU_INCOME_CATEGORIES C
            ON C.INCOME_ID = P.INCOME_CLASS_ID
          LEFT JOIN T_MIGU_INCOME_CATEGORIES Z
            ON (Z.INCOME_ID = P.INCOME_SECTION_ID AND
               Z.INCOME_PARENT_ID = P.INCOME_CLASS_ID)
         WHERE 1 = 1
       
          <if test="q_incomeClassId != null  ">
                 AND P.INCOME_CLASS_ID = #{q_incomeClassId,jdbcType=VARCHAR}
            </if>  
            <if test="q_incomeSectionId != null ">
                   AND P.INCOME_SECTION_ID = #{q_incomeSectionId,jdbcType=VARCHAR}
            </if>  
            <if test="q_dept != null  ">
                AND P.PROJECT_DEPT_ID = #{q_dept,jdbcType=VARCHAR}
            </if>  
            <if test="q_userName != null  ">
                AND U.USER_NAME like concat(concat('%', #{q_userName,jdbcType=VARCHAR}),'%')
            </if>  
		    <if test="billingKeys != null">
	    		AND T1.BILLING_KEY in 
					<foreach item="item" index="index" collection="billingKeys" open="("
						separator="," close=")">
						#{item}
					</foreach>
	    	</if>
		    <if test="q_bill_num != null  ">
                 AND T1.BILLING_KEY = #{q_bill_num,jdbcType=VARCHAR}
            </if>  
            <if test="q_month_bill != null  ">
                 AND T1.BZ_CYCLE = #{q_month_bill,jdbcType=VARCHAR}
            </if>  
         ORDER BY T1.BILLING_KEY) c
        <where>
            <if test="q_month_begin != null and q_month_end == null">
                AND CYCLE <![CDATA[   >=  ]]> #{q_month_begin,jdbcType=VARCHAR}
            </if>
            <if test="q_month_begin == null and q_month_end != null">
              AND  CYCLE <![CDATA[   <=  ]]> #{q_month_end,jdbcType=VARCHAR}
            </if>
             <if test="q_month_begin != null and q_month_end != null">
              AND  CYCLE <![CDATA[   <=  ]]> #{q_month_end,jdbcType=VARCHAR}
                AND CYCLE <![CDATA[   >=  ]]> #{q_month_begin,jdbcType=VARCHAR}
            </if>
            <if test="q_projectId != null and q_projectId != '' ">
                and PROJECT_ID = #{q_projectId,jdbcType=VARCHAR}
            </if>

            <if test="q_projectName != null and q_projectName != '' ">
                and PROJECT_NAME like concat(concat('%',#{q_projectName,jdbcType=VARCHAR}),'%')
            </if>

            <if test="q_billState != null and q_billState != '' ">
                and BILLING_STATUS = #{q_billState,jdbcType=VARCHAR}
            </if>

            <if test="q_userId != null and q_userId != '' ">
                and USER_ID= #{q_userId,jdbcType=VARCHAR}
            </if>
           
        </where>
        ) a where 1=1
		   <if test="q_bill_total != null  ">
                 AND a.BILLING_TOTAL = #{q_bill_total,jdbcType=VARCHAR}
          </if> 
          order by a.cycle Desc
    </select>
    
    <delete id="deleteBilling">
	  	delete from T_MIGU_INCOME_BILLING c where c.billing_key = #{billingKey}
	</delete>
    <select id="selectUnBilling" parameterType="java.lang.String" resultType="java.lang.Integer">
    	select count(1) from  
  		t_migu_income_billing b where b.project_id=#{0} and b.cycle=#{1}
    </select>
</mapper>